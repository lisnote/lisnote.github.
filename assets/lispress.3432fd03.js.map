{"version":3,"file":"lispress.3432fd03.js","sources":["../../node_modules/lispress/dist/lispress.js"],"sourcesContent":["function config (obj = {}) {\r\n    if (Reflect.has(obj, 'username')) {\r\n        config$1.username = obj.username;\r\n    }\r\n    else if (config$1.username == null) {\r\n        config$1.username = getUsername();\r\n    }\r\n    config$1 = Object.assign(Object.assign(Object.assign({}, init(config$1.username)), config$1), obj);\r\n    return config$1;\r\n}\r\n// data container\r\nlet config$1 = {};\r\n// init data\r\nfunction init(username) {\r\n    return {\r\n        articles: `https://api.github.com/repos/${username}/${username}.github.io/contents/articles`,\r\n        article: `https://${username}.github.io/articles/{title}`,\r\n        background: `https://${username}.github.io/articles/assets/{title}/background.jpg`,\r\n        avatar: `https://avatars.githubusercontent.com/${username}`,\r\n    };\r\n}\r\n// get username from host\r\nfunction getUsername() {\r\n    let username;\r\n    let index = location.host.indexOf('.github.io');\r\n    if (index == -1) {\r\n        console.error('Failed to obtain username,please set the username before using it.');\r\n        return 'lisnote';\r\n    }\r\n    username = location.host.substring(0, index);\r\n    return username;\r\n}\n\nfunction getArticleContent (title) {\r\n    return fetch(config().article.replace(/\\{title\\}/g, title))\r\n        .then((resp) => resp.text());\r\n}\n\nfunction getArticles() {\r\n    return fetch(config().articles, {\r\n        headers: {\r\n            authorization: 'Basic ' + btoa(config().clientID + ':' + config().clientSecret),\r\n        },\r\n    })\r\n        .then((resp) => resp.json())\r\n        .then((json) => {\r\n        return json\r\n            .map((obj) => obj.name)\r\n            .filter((obj) => obj != 'index.html' && obj != 'assets');\r\n    });\r\n}\r\nfunction getDateMap() {\r\n    let dateMap = {};\r\n    return fetch(`https://api.github.com/search/code?q=date%20user:${config().username}%20path:articles/%20language:markdown`, {\r\n        headers: {\r\n            Accept: 'application/vnd.github.v3.text-match+json',\r\n            authorization: 'Basic ' + btoa(config().clientID + ':' + config().clientSecret),\r\n        },\r\n    })\r\n        .then((resp) => resp.json())\r\n        .then((result) => {\r\n        try {\r\n            result = result.items.filter((element) => {\r\n                return !/articles\\/.*\\//.test(element.path);\r\n            });\r\n            result.forEach((element) => {\r\n                try {\r\n                    dateMap[element.name] = Number(element.text_matches[0].fragment\r\n                        .match(/\\d{4}(-\\d{2}){2} \\d{2}(:\\d{2}){2}/)[0]\r\n                        .replace(/-| |:/g, ''));\r\n                }\r\n                catch (_a) {\r\n                    dateMap[element.name] = 0;\r\n                }\r\n            });\r\n            return dateMap;\r\n        }\r\n        catch (e) {\r\n            console.error(\"Sort failed, API rate limit exceeded.\");\r\n            return {};\r\n        }\r\n    });\r\n}\r\nvar common = {\r\n    getArticles,\r\n    getDateMap,\r\n};\n\nfunction getArticlesTitle () {\r\n    let titles;\r\n    let dateMap;\r\n    let getarticles = common\r\n        .getArticles()\r\n        .then((thatTitles) => (titles = thatTitles));\r\n    let getDateMap = common\r\n        .getDateMap()\r\n        .then((thatDateMap) => (dateMap = thatDateMap));\r\n    return Promise.all([getarticles, getDateMap]).then(() => {\r\n        titles.sort((x, y) => {\r\n            return dateMap[y] - dateMap[x];\r\n        });\r\n        return titles;\r\n    });\r\n}\n\nfunction getBackgroundUrl (title) {\r\n    return config().background.replace(/\\{title\\}/g, title);\r\n}\n\nfunction getSearchArticlesTitle (keywords) {\r\n    let titles;\r\n    let dateMap;\r\n    let getarticles = common\r\n        .getArticles()\r\n        .then((thatTitles) => (titles = thatTitles));\r\n    let getDateMap = common\r\n        .getDateMap()\r\n        .then((thatDateMap) => (dateMap = thatDateMap));\r\n    return Promise.all([getarticles, getDateMap]).then(() => {\r\n        let promises = [];\r\n        let filter = [];\r\n        for (let title of titles) {\r\n            let promise = getArticleContent(title)\r\n                .then((article) => {\r\n                if (hasKeywords(keywords, title, article)) {\r\n                    filter.push(title);\r\n                }\r\n            });\r\n            promises.push(promise);\r\n        }\r\n        return Promise.all(promises).then(() => {\r\n            filter.sort((x, y) => {\r\n                return dateMap[y] - dateMap[x];\r\n            });\r\n            return filter;\r\n        });\r\n    });\r\n    function hasKeywords(keywords, title, article) {\r\n        for (let keyword of keywords) {\r\n            if (title.indexOf(keyword) < 0 && article.indexOf(keyword) < 0) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n}\n\nfunction setAvatar (selector) {\r\n    document.querySelectorAll(selector).forEach((obj) => {\r\n        obj.setAttribute('src', config().avatar);\r\n    });\r\n}\n\nfunction setGithubUrl (selector) {\r\n    document.querySelectorAll(selector).forEach((obj) => {\r\n        obj.setAttribute('href', `https://github.com/${config().username}`);\r\n    });\r\n}\n\nfunction setUsername (selector) {\r\n    document.querySelectorAll(selector).forEach((obj) => {\r\n        obj.innerText = config().username;\r\n    });\r\n}\n\nvar index = {\r\n    config,\r\n    getArticleContent,\r\n    getArticlesTitle,\r\n    getBackgroundUrl,\r\n    getSearchArticlesTitle,\r\n    setAvatar,\r\n    setGithubUrl,\r\n    setUsername,\r\n};\n\nexport { index as default };\n"],"names":["obj","Reflect","has","config$1","username","getUsername","Object","assign","init","articles","article","background","avatar","index","location","host","indexOf","console","error","substring","title","fetch","config","replace","then","resp","text","headers","authorization","btoa","clientID","clientSecret","json","map","name","filter","dateMap","Accept","result","items","element","test","path","forEach","Number","text_matches","fragment","match","common","getArticles","getDateMap","titles","getarticles","thatTitles","thatDateMap","Promise","all","sort","x","y","keywords","promises","promise","getArticleContent","hasKeywords","push","keyword","selector","document","querySelectorAll","setAttribute","innerText","getArticlesTitle","getBackgroundUrl","getSearchArticlesTitle","setAvatar","setGithubUrl","setUsername"],"mappings":"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"}